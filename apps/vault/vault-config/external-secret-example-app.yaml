---
# Example ExternalSecret for a generic application
# This can be used as a template for any app
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: app-database-credentials
  namespace: my-app  # Change to your app namespace
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore  # Using ClusterSecretStore
  target:
    name: database-credentials
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        # Database connection string
        DATABASE_URL: "postgresql://{{ .username }}:{{ .password }}@{{ .host }}:{{ .port }}/{{ .database }}"
        # Individual fields
        DB_HOST: "{{ .host }}"
        DB_PORT: "{{ .port }}"
        DB_NAME: "{{ .database }}"
        DB_USER: "{{ .username }}"
        DB_PASSWORD: "{{ .password }}"
  dataFrom:
    # Import all keys from a Vault secret
    - extract:
        key: apps/my-app/database
---
# Example for tenant-specific secrets
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: tenant-config
  namespace: team-a  # Tenant namespace
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: tenant-config
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: tenants/team-a/config
